name: Update Latest Substack Articles

on:
  schedule:
    - cron: '0 */6 * * *' # Runs every 6 hours
  workflow_dispatch: # Allows manual triggering
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Fetch latest 5 Substack posts
        run: |
          RSS_URL="https://peterlimg.substack.com/feed"
          
          # Download RSS feed
          curl -s -A "Mozilla/5.0 (compatible; RSS Reader)" "$RSS_URL" > feed.xml
          
          # Parse RSS using Python with proper XML handling
          python3 -c "
          import xml.etree.ElementTree as ET
          from datetime import datetime
          import re
          
          # Parse XML from file
          tree = ET.parse('feed.xml')
          root = tree.getroot()
          
          # Find all items (handle namespaces)
          items = root.findall('.//item')[:5]
          
          with open('articles.txt', 'w') as f:
              for item in items:
                  title_elem = item.find('title')
                  link_elem = item.find('link')
                  pubdate_elem = item.find('pubDate')
                  
                  if title_elem is not None and link_elem is not None:
                      # Extract title, handling CDATA
                      title = title_elem.text or ''
                      if title.startswith('<![CDATA[') and title.endswith(']]>'):
                          title = title[9:-3]
                      
                      link = link_elem.text or ''
                      pubdate = pubdate_elem.text or '' if pubdate_elem is not None else ''
                      
                      # Format date
                      try:
                          # Remove timezone info for parsing
                          date_str = re.sub(r' [A-Z]{3}$', '', pubdate)
                          date_obj = datetime.strptime(date_str, '%a, %d %b %Y %H:%M:%S')
                          formatted_date = date_obj.strftime('%B %d, %Y')
                      except:
                          formatted_date = pubdate
                      
                      f.write(f'- [{title}]({link}) - *{formatted_date}*\n')
          "
          
          # Clean up
          rm -f feed.xml

      - name: Update README
        run: |
          START="<!-- SUBSTACK:START -->"
          END="<!-- SUBSTACK:END -->"
          
          # Create temporary file with new content
          awk -v start="$START" -v end="$END" '
            BEGIN {found=0}
            {
              if(index($0, start)) {
                found=1
                print
                next
              }
              if(index($0, end)) {
                found=0
                print
                next
              }
              if(!found) print
            }
          ' README.md > README.tmp
          
          # Insert the articles between the markers
          sed -i "/<!-- SUBSTACK:START -->/r articles.txt" README.tmp
          
          mv README.tmp README.md

      - name: Commit and Push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update latest Substack articles in README"
          file_pattern: README.md